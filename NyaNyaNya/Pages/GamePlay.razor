@page "/gameplay/{IsPlayMusic:bool}/{PlanetId:int}"

<div class="d-flex flex-column justify-content-center align-items-center h-100 w-100 game-bg"
    style="@($"background: url('images/backgrounds/background-{PlanetId}.jpg');")">
    <span class="position-absolute game-box energy-box">
        <img src="images/icons/thunder.png" alt="thunder" style="width: 45px; height: 70px;"> @energy
    </span>

    <div class="@($"menu-frame d-flex justify-content-between align-items-center position-absolute {menuFrameClass}")">
        <img class="cursor-pointer close-icon" src="images/icons/exit.jpg" @onclick="@SwitchMenuFrame">
        <span class="exit-button justify-content-center cursor-pointer">Exit</span>
    </div>

    <span class="position-absolute game-box config-box cursor-pointer justify-content-center" @onclick="@SwitchMenuFrame">
        <img src="images/icons/pixel-paw.png" alt="paw" style="height: 90%; width: 90%;"/>
    </span>

    <div class="d-flex justify-content-center align-items-center position-absolute center-absolute" style="gap: 10px; bottom: 0;">
        @for (int i = 0; i < 6; i++)
        {
            var selectedDrawer = i;

                <div class="d-flex flex-column" style="height: 80px; width: 70px; z-index: 5;">
                    <div class="cat-container d-flex align-items-center justify-content-center" style="height: 80%; width: 100%;">
                        <img src="@catDrawer[i].Image" style="width: 75%; height: 75%;" />
                    </div>
                    <span class="cat-container d-flex align-items-center justify-content-center" style="height: 20%; width: 100%; font-size: 5px;">@catDrawer[i].Name</span>
                </div>
        }
    </div>
</div>

<MusicPlayer Track="Skate" PlayMusic="IsPlayMusic" />

@code {
    [Parameter]
    public bool IsPlayMusic { get; set; }

    [Parameter]
    public int PlanetId { get; set; }

    [Parameter]
    public int CatNames { get; set; }

    private bool menuFramOn = false;
    private string menuFrameClass = "menu-frame-off";

    private List<Cat> catDrawer = new List<Cat>();

    private int energy = 0;

    string rootpath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "wwwroot");

    public GamePlay()
    {
        using (StreamReader r = new StreamReader(rootpath + "/database/selected-cats.json"))
        {
            string json = r.ReadToEnd();
            var catsTemp = JsonConvert.DeserializeObject<List<Cat>>(json);
            catDrawer = catsTemp;
        }

        File.WriteAllText(rootpath + "/database/selected-cats.json", string.Empty);
    }

    protected void SwitchMenuFrame()
    {
        menuFramOn = !menuFramOn;
        menuFrameClass = menuFramOn ? "" : "menu-frame-off";
    }
}